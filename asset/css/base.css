:root {
    --white-color: #fff;
    --black-color: #000;
    --text-color: #333;
    --basic-color: #ee5234;
    --border-color: #dbdbdb;
    --narbar-height: 34px;
    --header-height: 120px;
    --search-height: calc(var(--header-height) - var(--narbar-height));
}

* {
    box-sizing: inherit;
}

html {
    /* HACK */
    font-size: 62.5%;
    line-height: 1.6rem;
    font-family: 'Roboto', sans-serif;
    box-sizing: border-box;
}

/* Responsive */
.grid {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}

.grid__full-width {
    width: 100%;
}

.grid__row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -12px;
    margin-right: -12px;
}

/* Test */
.grid__column-2 {
    padding-left: 12px;
    padding-right: 12px;
    width: 16.66667%;
}

.grid__column-10 {
    padding-left: 12px;
    padding-right: 12px;
    width: 83.33333%;
}

/* modal */
.modal {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    animation: fadeIn linear 0.1s;
}

.modal__overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.1);
}

.modal__body {
    --grow-from: 0.7;
    --grow-to: 1;
    margin: auto;
    z-index: 1;
    animation: growTH linear 0.1s;
}

/* Btn style */
.btn {
    min-width: 124px;
    height: 36px;
    text-decoration: none;
    border: none;
    border-radius: 2px;
    font-size: 1.4rem;
    padding: 0 12px;
    cursor: pointer;
    color: var(--text-color);
    background-color: var(--white-color);
    display: flex;
    justify-content: center;
    align-items: center;
}

.btn.btn--normal:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.btn.btn--primary {
    color: var(--white-color);
    background-color: var(--basic-color);

}

.btn.btn--disable {
    cursor: default;
    opacity: 0.5;
}

.btn--sizeS {
    height: 32px;
    font-size: 1.2rem;
    padding: 0 8px;
}

/* Animation */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes zoomInOut {
    from {
        transform: scale(0);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes growTH {
    from {
        transform: scale(var(--grow-from));
    }

    to {
        transform: scale(var(--grow-to));
    }
}